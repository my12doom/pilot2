/*
 * File:           C:\Users\zerozero\Desktop\adau1761\adau1761_mic_IC_1.h
 *
 * Created:        Wednesday, April 1, 2020 5:26:23 PM
 * Description:    adau1761_mic:IC 1 program data.
 *
 * This software is distributed in the hope that it will be useful,
 * but is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * This software may only be used to program products purchased from
 * Analog Devices for incorporation by you into audio products that
 * are intended for resale to audio product end users. This software
 * may not be distributed whole or in any part to third parties.
 *
 * Copyright Â©2020 Analog Devices, Inc. All rights reserved.
 */
#ifndef __ADAU1761_MIC_IC_1_H__
#define __ADAU1761_MIC_IC_1_H__

typedef unsigned char  ADI_REG_TYPE;
typedef unsigned short ADI_DATA_U16;


#include "adau1761_mic_IC_1_REG.h"
#include <stdint.h>

#define DEVICE_ARCHITECTURE_IC_1                  "ADAU176x"
#define DEVICE_ADDR_IC_1                          0x70

/* DSP Program Data */
/* DSP Parameter (Coefficient) Data */

/* Register Default - IC 1.DSP Run Register */
ADI_REG_TYPE R0_DSP_RUN_REGISTER_IC_1_Default[REG_DSP_RUN_REGISTER_IC_1_BYTE] = {
0x00
};

/* Register Default - IC 1.Clock Control Register */
ADI_REG_TYPE R1_CLKCTRLREGISTER_IC_1_Default[REG_CLKCTRLREGISTER_IC_1_BYTE] = {
0x01
};

/* Register Default - IC 1.PLL Control Register */
ADI_REG_TYPE R2_PLLCRLREGISTER_IC_1_Default[REG_PLLCRLREGISTER_IC_1_BYTE] = {
0x00, 0xFD, 0x00, 0x0C, 0x20, 0x00
};

/* Register Default - IC 1.Delay */
#define R3_DELAY_IC_1_ADDR 0x0
#define R3_DELAY_IC_1_SIZE 2
ADI_REG_TYPE R3_DELAY_IC_1_Default[R3_DELAY_IC_1_SIZE] = {
0x00, 0x64
};

/* Register Default - IC 1.Serial Port Control Registers */
// 0x4015
#define R4_SERIAL_PORT_CONTROL_REGISTERS_IC_1_SIZE 2
ADI_REG_TYPE R4_SERIAL_PORT_CONTROL_REGISTERS_IC_1_Default[R4_SERIAL_PORT_CONTROL_REGISTERS_IC_1_SIZE] = {
0x09, 0x02
};

/* Register Default - IC 1.ALC Control Registers */
#define R5_ALC_CONTROL_REGISTERS_IC_1_SIZE 4
ADI_REG_TYPE R5_ALC_CONTROL_REGISTERS_IC_1_Default[R5_ALC_CONTROL_REGISTERS_IC_1_SIZE] = {
0x00, 0x00, 0x08, 0x00
};

/* Register Default - IC 1.Microphone Control Register */
ADI_REG_TYPE R6_MICCTRLREGISTER_IC_1_Default[REG_MICCTRLREGISTER_IC_1_BYTE] = {
0x00
};

/* Register Default - IC 1.Record Input Signal Path Registers */
#define R7_RECORD_INPUT_SIGNAL_PATH_REGISTERS_IC_1_SIZE 8
ADI_REG_TYPE R7_RECORD_INPUT_SIGNAL_PATH_REGISTERS_IC_1_Default[R7_RECORD_INPUT_SIGNAL_PATH_REGISTERS_IC_1_SIZE] = {
0x00, 0x01, 0x08, 0x01, 0x08, 0xFF, 0xFF, 0x09
};
//4009, A,     B,    C,    D,    E,    F,    0

/* Register Default - IC 1.ADC Control Registers */
#define R8_ADC_CONTROL_REGISTERS_IC_1_SIZE 3
ADI_REG_TYPE R8_ADC_CONTROL_REGISTERS_IC_1_Default[R8_ADC_CONTROL_REGISTERS_IC_1_SIZE] = {
0x33, 0x00, 0x00
};

/* Register Default - IC 1.Playback Output Signal Path Registers */
#define R9_PLAYBACK_OUTPUT_SIGNAL_PATH_REGISTERS_IC_1_SIZE 14
ADI_REG_TYPE R9_PLAYBACK_OUTPUT_SIGNAL_PATH_REGISTERS_IC_1_Default[R9_PLAYBACK_OUTPUT_SIGNAL_PATH_REGISTERS_IC_1_SIZE] = {
0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDF, 0xE4, 0xCC, 0x00, 0xE5, 0x00, 0x01
};

//1c, 1d,   1e,   1f    20    21    22    23    24

/* Register Default - IC 1.Converter Control Registers */
#define R10_CONVERTER_CONTROL_REGISTERS_IC_1_SIZE 2
ADI_REG_TYPE R10_CONVERTER_CONTROL_REGISTERS_IC_1_Default[R10_CONVERTER_CONTROL_REGISTERS_IC_1_SIZE] = {
0x00, 0x00
};

/* Register Default - IC 1.DAC Control Registers */
#define R11_DAC_CONTROL_REGISTERS_IC_1_SIZE 3
ADI_REG_TYPE R11_DAC_CONTROL_REGISTERS_IC_1_Default[R11_DAC_CONTROL_REGISTERS_IC_1_SIZE] = {
0x03, 0x00, 0x00
};

/* Register Default - IC 1.Serial Port Pad Control Registers */
#define R12_SERIAL_PORT_PAD_CONTROL_REGISTERS_IC_1_SIZE 1
ADI_REG_TYPE R12_SERIAL_PORT_PAD_CONTROL_REGISTERS_IC_1_Default[R12_SERIAL_PORT_PAD_CONTROL_REGISTERS_IC_1_SIZE] = {
0x8A
};

/* Register Default - IC 1.Communication Port Pad Control Registers */
#define R13_COMMUNICATION_PORT_PAD_CONTROL_REGISTERS_IC_1_SIZE 2
ADI_REG_TYPE R13_COMMUNICATION_PORT_PAD_CONTROL_REGISTERS_IC_1_Default[R13_COMMUNICATION_PORT_PAD_CONTROL_REGISTERS_IC_1_SIZE] = {
0x2A, 0x00
};

/* Register Default - IC 1.Jack Detect Pad Control Register */
ADI_REG_TYPE R14_JACKREGISTER_IC_1_Default[REG_JACKREGISTER_IC_1_BYTE] = {
0x08
};

/* Register Default - IC 1.DSP ON Register */
ADI_REG_TYPE R20_DSP_ENABLE_REGISTER_IC_1_Default[REG_DSP_ENABLE_REGISTER_IC_1_BYTE] = {
0x01
};

/* Register Default - IC 1.CRC Registers */
#define R21_CRC_REGISTERS_IC_1_SIZE 5
ADI_REG_TYPE R21_CRC_REGISTERS_IC_1_Default[R21_CRC_REGISTERS_IC_1_SIZE] = {
0x7F, 0x7F, 0x7F, 0x7F, 0x01
};

/* Register Default - IC 1.GPIO Registers */
#define R22_GPIO_REGISTERS_IC_1_SIZE 4
ADI_REG_TYPE R22_GPIO_REGISTERS_IC_1_Default[R22_GPIO_REGISTERS_IC_1_SIZE] = {
0x00, 0x00, 0x00, 0x00
};

/* Register Default - IC 1.Non Modulo Registers */
#define R23_NON_MODULO_REGISTERS_IC_1_SIZE 2
ADI_REG_TYPE R23_NON_MODULO_REGISTERS_IC_1_Default[R23_NON_MODULO_REGISTERS_IC_1_SIZE] = {
0x00, 0x00
};

/* Register Default - IC 1.Watchdog Registers */
#define R24_WATCHDOG_REGISTERS_IC_1_SIZE 5
ADI_REG_TYPE R24_WATCHDOG_REGISTERS_IC_1_Default[R24_WATCHDOG_REGISTERS_IC_1_SIZE] = {
0x00, 0x00, 0x00, 0x00, 0x00
};

/* Register Default - IC 1.Sampling Rate Setting Register */
ADI_REG_TYPE R25_SAMPLE_RATE_SETTING_IC_1_Default[REG_SAMPLE_RATE_SETTING_IC_1_BYTE] = {
0x7F
};

/* Register Default - IC 1.Routing Matrix Inputs Register */
ADI_REG_TYPE R26_ROUTING_MATRIX_INPUTS_IC_1_Default[REG_ROUTING_MATRIX_INPUTS_IC_1_BYTE] = {
0x01
};

/* Register Default - IC 1.Routing Matrix Outputs Register */
ADI_REG_TYPE R27_ROUTING_MATRIX_OUTPUTS_IC_1_Default[REG_ROUTING_MATRIX_OUTPUTS_IC_1_BYTE] = {
0x01
};

/* Register Default - IC 1.Serial Data Configuration Register */
ADI_REG_TYPE R28_SERIAL_DATAGPIO_PIN_CONFIG_IC_1_Default[REG_SERIAL_DATAGPIO_PIN_CONFIG_IC_1_BYTE] = {
0x00
};

/* Register Default - IC 1.DSP Slew Mode Register */
ADI_REG_TYPE R29_DSP_SLEW_MODES_IC_1_Default[REG_DSP_SLEW_MODES_IC_1_BYTE] = {
0x00
};

/* Register Default - IC 1.Serial Port Sample Rate Register */
ADI_REG_TYPE R30_SERIAL_PORT_SAMPLE_RATE_SETTING_IC_1_Default[REG_SERIAL_PORT_SAMPLE_RATE_SETTING_IC_1_BYTE] = {
0x00
};

/* Register Default - IC 1.Clock Enable Registers */
#define R31_CLOCK_ENABLE_REGISTERS_IC_1_SIZE 2
ADI_REG_TYPE R31_CLOCK_ENABLE_REGISTERS_IC_1_Default[R31_CLOCK_ENABLE_REGISTERS_IC_1_SIZE] = {
0x7F, 0x03
};

/* Register Default - IC 1.DSP Run Register */
ADI_REG_TYPE R32_DSP_RUN_REGISTER_IC_1_Default[REG_DSP_RUN_REGISTER_IC_1_BYTE] = {
0x01
};

/* Register Default - IC 1.Dejitter Register Control */
ADI_REG_TYPE R33_DEJITTER_REGISTER_CONTROL_IC_1_Default[REG_DEJITTER_REGISTER_CONTROL_IC_1_BYTE] = {
0x00
};

/* Register Default - IC 1.Dejitter Register Control */
ADI_REG_TYPE R34_DEJITTER_REGISTER_CONTROL_IC_1_Default[REG_DEJITTER_REGISTER_CONTROL_IC_1_BYTE] = {
0x03
};

/*
 * Default Download
 */
#define DEFAULT_DOWNLOAD_SIZE_IC_1 35

int SIGMA_WRITE_DELAY( uint8_t devAddress, int length, uint8_t *pData );
int SIGMA_WRITE_REGISTER_BLOCK( uint8_t devAddress, uint16_t address, int length, uint8_t* pData );


int default_download_IC_1(bool _24bit) {
	R4_SERIAL_PORT_CONTROL_REGISTERS_IC_1_Default[1] = _24bit ? 0x02 : 0x03;

	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_DSP_RUN_REGISTER_IC_1_ADDR, REG_DSP_RUN_REGISTER_IC_1_BYTE, R0_DSP_RUN_REGISTER_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_CLKCTRLREGISTER_IC_1_ADDR, REG_CLKCTRLREGISTER_IC_1_BYTE, R1_CLKCTRLREGISTER_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_PLLCRLREGISTER_IC_1_ADDR, REG_PLLCRLREGISTER_IC_1_BYTE, R2_PLLCRLREGISTER_IC_1_Default );
	SIGMA_WRITE_DELAY( DEVICE_ADDR_IC_1, R3_DELAY_IC_1_SIZE, R3_DELAY_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_SERIAL_PORT_CONTROL_0_IC_1_ADDR , R4_SERIAL_PORT_CONTROL_REGISTERS_IC_1_SIZE, R4_SERIAL_PORT_CONTROL_REGISTERS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_ALC_CONTROL_0_IC_1_ADDR , R5_ALC_CONTROL_REGISTERS_IC_1_SIZE, R5_ALC_CONTROL_REGISTERS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_MICCTRLREGISTER_IC_1_ADDR, REG_MICCTRLREGISTER_IC_1_BYTE, R6_MICCTRLREGISTER_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_RECORD_PWR_MANAGEMENT_IC_1_ADDR , R7_RECORD_INPUT_SIGNAL_PATH_REGISTERS_IC_1_SIZE, R7_RECORD_INPUT_SIGNAL_PATH_REGISTERS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_ADC_CONTROL_0_IC_1_ADDR , R8_ADC_CONTROL_REGISTERS_IC_1_SIZE, R8_ADC_CONTROL_REGISTERS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_PLAYBACK_MIXER_LEFT_CONTROL_0_IC_1_ADDR , R9_PLAYBACK_OUTPUT_SIGNAL_PATH_REGISTERS_IC_1_SIZE, R9_PLAYBACK_OUTPUT_SIGNAL_PATH_REGISTERS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_CONVERTER_CTRL_0_IC_1_ADDR , R10_CONVERTER_CONTROL_REGISTERS_IC_1_SIZE, R10_CONVERTER_CONTROL_REGISTERS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_DAC_CONTROL_0_IC_1_ADDR , R11_DAC_CONTROL_REGISTERS_IC_1_SIZE, R11_DAC_CONTROL_REGISTERS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_SERIAL_PORT_PAD_CONTROL_0_IC_1_ADDR , R12_SERIAL_PORT_PAD_CONTROL_REGISTERS_IC_1_SIZE, R12_SERIAL_PORT_PAD_CONTROL_REGISTERS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_COMM_PORT_PAD_CTRL_0_IC_1_ADDR , R13_COMMUNICATION_PORT_PAD_CONTROL_REGISTERS_IC_1_SIZE, R13_COMMUNICATION_PORT_PAD_CONTROL_REGISTERS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_JACKREGISTER_IC_1_ADDR, REG_JACKREGISTER_IC_1_BYTE, R14_JACKREGISTER_IC_1_Default );
	//SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, PROGRAM_ADDR_IC_1, PROGRAM_SIZE_IC_1, Program_Data_IC_1 );
	//SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, PROGRAM_ADDR_IC_1, PROGRAM_SIZE_IC_1, Program_Data_IC_1 );
	//SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, PROGRAM_ADDR_IC_1, PROGRAM_SIZE_IC_1, Program_Data_IC_1 );
	//SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, PROGRAM_ADDR_IC_1, PROGRAM_SIZE_IC_1, Program_Data_IC_1 );
	//SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, PROGRAM_ADDR_IC_1, PROGRAM_SIZE_IC_1, Program_Data_IC_1 );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_DSP_ENABLE_REGISTER_IC_1_ADDR, REG_DSP_ENABLE_REGISTER_IC_1_BYTE, R20_DSP_ENABLE_REGISTER_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_CRC_IDEAL_1_IC_1_ADDR , R21_CRC_REGISTERS_IC_1_SIZE, R21_CRC_REGISTERS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_GPIO_0_CONTROL_IC_1_ADDR , R22_GPIO_REGISTERS_IC_1_SIZE, R22_GPIO_REGISTERS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_NON_MODULO_RAM_1_IC_1_ADDR , R23_NON_MODULO_REGISTERS_IC_1_SIZE, R23_NON_MODULO_REGISTERS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_WATCHDOG_ENABLE_IC_1_ADDR , R24_WATCHDOG_REGISTERS_IC_1_SIZE, R24_WATCHDOG_REGISTERS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_SAMPLE_RATE_SETTING_IC_1_ADDR, REG_SAMPLE_RATE_SETTING_IC_1_BYTE, R25_SAMPLE_RATE_SETTING_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_ROUTING_MATRIX_INPUTS_IC_1_ADDR, REG_ROUTING_MATRIX_INPUTS_IC_1_BYTE, R26_ROUTING_MATRIX_INPUTS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_ROUTING_MATRIX_OUTPUTS_IC_1_ADDR, REG_ROUTING_MATRIX_OUTPUTS_IC_1_BYTE, R27_ROUTING_MATRIX_OUTPUTS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_SERIAL_DATAGPIO_PIN_CONFIG_IC_1_ADDR, REG_SERIAL_DATAGPIO_PIN_CONFIG_IC_1_BYTE, R28_SERIAL_DATAGPIO_PIN_CONFIG_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_DSP_SLEW_MODES_IC_1_ADDR, REG_DSP_SLEW_MODES_IC_1_BYTE, R29_DSP_SLEW_MODES_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_SERIAL_PORT_SAMPLE_RATE_SETTING_IC_1_ADDR, REG_SERIAL_PORT_SAMPLE_RATE_SETTING_IC_1_BYTE, R30_SERIAL_PORT_SAMPLE_RATE_SETTING_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_CLOCK_ENABLE_REG_0_IC_1_ADDR , R31_CLOCK_ENABLE_REGISTERS_IC_1_SIZE, R31_CLOCK_ENABLE_REGISTERS_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_DSP_RUN_REGISTER_IC_1_ADDR, REG_DSP_RUN_REGISTER_IC_1_BYTE, R32_DSP_RUN_REGISTER_IC_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_DEJITTER_REGISTER_CONTROL_IC_1_ADDR, REG_DEJITTER_REGISTER_CONTROL_IC_1_BYTE, R33_DEJITTER_REGISTER_CONTROL_IC_1_Default );
	return SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_IC_1, REG_DEJITTER_REGISTER_CONTROL_IC_1_ADDR, REG_DEJITTER_REGISTER_CONTROL_IC_1_BYTE, R34_DEJITTER_REGISTER_CONTROL_IC_1_Default );
}

#endif
